# version: '2'
# services:
#   app:
#     build: .
#     command: bundle exec rails s -p 3000 -b '0.0.0.0' -e production
#     volumes:
#       - ".:/app"
#     ports:
#       - "3001:3000"
#     depends_on:
#       - 'mongodb'
#     links:
#       - 'mongodb'
#   mongodb:
#     container_name: mongodb
#     image: mongo:6.0
#     volumes:
#       - ~/mongo:/data/db
#     ports:
#       - "27017:27017"
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=app_user
#       - MONGO_INITDB_ROOT_PASSWORD=app_password
#       - MONGO_INITDB_DATABASE=admin
#     networks:
#       - node-webapp-network
# networks:
#   node-webapp-network:
#     driver: bridge

version: "3"
services:
  nodeapp:
    container_name: node_pdf
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: bundle exec rails s -p 3000 -b '0.0.0.0' -e production
    # env_file: .env
    ports:
      # - "4500:4500"
      - "3001:3000"
    links:
      - mongodb
    depends_on:
      - mongodb
    environment:
      WAIT_HOSTS: mongodb:27017
    networks:
      - node-webapp-network
  mongodb:
    container_name: mongodb
    image: mongo:5.0.2
    # image: mongo:6.0
    volumes:
      # - ~/mongo:/data/db
      - /var/lib/mongodb:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=app_user
      - MONGO_INITDB_ROOT_PASSWORD=app_password
      - MONGO_INITDB_DATABASE=admin
    networks:
      - node-webapp-network
networks:
  node-webapp-network:
    driver: bridge

source ~/.bashrc

ENV["GMAIL_USERNAME"]


# sudo systemctl status mongod

# sudo systemctl start mongod

# sudo systemctl status mongod

# mongo --eval 'db.runCommand({ connectionStatus: 1 })'

# sudo ss -pnltu | grep 27017

# sudo systemctl enable mongod

# https://www.cherryservers.com/blog/how-to-install-and-start-using-mongodb-on-ubuntu-20-04



# Step 1: Remove lock file.
# sudo rm /var/lib/mongodb/mongod.lock

# Step 2: Repair mongodb. 
# sudo mongod --repair 

# Step 3: start mongodb.
# sudo start mongodb 
# or
# sudo service mongodb start

# Step 4: Check status of mongodb.
# sudo status mongodb 
# or
# sudo service mongodb status

# Step 5: Start mongo console.
# mongo

# sudo service mongod restart 

http://localhost:3000/

rake db:migrate RAILS_ENV=production
https://backend.turing.edu/module3/archive/lessons/running_production_locally